name: allure-report
on:
    push:
        branches:
            - run_action
            - deploy_to_gh_pages
    
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
    group: "pages"
    cancel-in-progress: false

jobs:
    generate-report:
        runs-on: ubuntu-20.04
        steps:
            - uses: actions/checkout@v3

            - name: Download Cypress
              run: | 
                npm install

            - name: Run Cypress
              continue-on-error: true
              run: npx cypress run --env allure=true
            
            - name: Generate Allure Report
              uses: simple-elf/allure-report-action@v1.6
              if: always()
              with:
                  allure_results: allure-results

            # - name: Generate html report
            #   run: npm run reportNow

            - name: Upload artifact
              uses: actions/upload-pages-artifact@v1
              with:
                path: './allure-report/'

    # Single deploy job since we're just deploying
    deploy:
      environment:
        name: github-pages
        url: ${{ steps.deployment.outputs.page_url }}
      runs-on: ubuntu-20.04
      needs: generate-report
      steps:
        - name: Setup Pages
          uses: actions/configure-pages@v3
        - name: Deploy to GitHub Pages
          id: deployment
          uses: actions/deploy-pages@v2